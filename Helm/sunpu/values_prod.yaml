replicaCount: 1

jaeger:
  sidecar: jaeger-production
  collector_host: dns:///jaeger-production-collector-headless.observability:14250


image:
  repository: registry.happytravel.com/sunpu
  tag: latest
  pullPolicy: Always
imagePullSecrets:
  - name: travel-registry
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    nginx.ingress.kubernetes.io/proxy-send-timeout: '60'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '60'
  hosts:
    - host: sunpu.happytravel.com
      paths:
        - /
  tls:
   - secretName: happytravel-tls
     hosts:
       - sunpu.happytravel.com

resources:
  limits:
    cpu: 1
    memory: 3Gi
  requests:
    cpu: 100m
    memory: 2Gi

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  enabled: false
  serviceMonitor:
    enabled: false
  podMonitor:
    enabled: false
  podport: http
  podpath: /metrics

env:
  ASPNETCORE_URLS: http://*:80
  ASPNETCORE_ENVIRONMENT: "Production"
  HTDC_VAULT_ENDPOINT: "https://vault.happytravel.com/v1/"
  HTDC_SUNPU_SENTRY_ENDPOINT: "https://5b342f0cc9dc41f7be37281d22b662ed@sentry1.happytravel.com/60"
  HTDC_REDIS_HOST: "redis-sunpu"
  JAEGER_AGENT_HOST: "localhost"
  JAEGER_AGENT_PORT: "6831"
  CONSUL_HTTP_ADDR: "https://consul.happytravel.com/"
